{"version":3,"sources":["components/Button/index.js","components/WhiteBlock/index.js","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/file.js","core/socket.js","redux/actions/dialogs.js","redux/actions/messages.js","utils/helpers/openDialogs.js","utils/helpers/isAudio.js","utils/helpers/getMessageTime.js","redux/actions/user.js","redux/actions/attachments.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/SideBar.js","containers/Profile.js","containers/Avatar.js","containers/Edit.js","components/Message/index.js","utils/helpers/convertCurrentTime.js","components/Messages/index.js","components/DialogItem/index.js","components/Time/index.js","components/Readed/index.js","components/Dialogs/index.js","components/Avatar/index.js","utils/helpers/generateAvatarFromHash.js","components/Status/index.js","components/ChatInput/index.js","components/FormField/index.js","components/SideBar/index.js","components/UploadsFiles/index.js","components/Profile/index.js","components/Edit/index.js","modules/LoginForm/components/LoginForm.jsx","utils/validations.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","redux/reducers/attachments.js","redux/reducers/index.js","redux/store.js","modules/LoginForm/index.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/conponents/CheckInfo.jsx","pages/Auth/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["Button","props","className","size","WhiteBlock","children","axios","defaults","baseURL","headers","common","window","localStorage","token","get","partnerId","value","post","partner","text","_id","dialog","attachments","delete","obj","hash","name","data","url","fullname","email","bio","file","formData","FormData","append","socket","io","actions","setDialogs","items","type","payload","setStatus","bool","setCurrentDialogId","dispatch","emit","updateReadedStatus","userId","dialogId","updateUnreadedStatus","fetchDialogs","dialogsApi","then","setMessages","onRemoveMessage","messagesApi","catch","err","setIsLoading","addMessage","message","getState","dialogs","currentDialogId","location","pathname","split","fetchSendMessage","fetchMessages","title","duration","notification","description","length","ext","createdAt","isToday","format","setUserData","user","setIsAuth","setChangeData","setData","setAvatar","fetchUserData","userApi","response","status","fetchUserLogin","openDialogs","fetchUserRegister","getUserById","setUserAvatar","fileApi","avatar","setChangeInfo","info","setAttachments","removeAttachments","connect","dialogsActions","useState","inputValue","setValue","Array","from","filtred","setFiltredItems","onChangeInput","useCallback","filter","author","toLowerCase","indexOf","useEffect","onNewMessage","on","removeListener","forEach","item","friend","onSearch","messages","isLoading","messagesActions","isVisiable","setIsVisiable","previewImage","setPreviewImage","blockHeight","setBlockHeight","messageRef","useRef","current","scrollTo","blockRef","attachmentsActions","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","emojiPickerVisible","setShowEmojiPicker","setLoading","onRecording","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","e","File","sendAudio","onError","console","log","handleOutsideClick","el","contains","target","audioId","sendMessage","stop","map","uid","document","querySelector","addEventListener","bind","removeEventListener","toggleEmojiPicker","addEmoji","colons","trim","handleSendMessage","keyCode","onSelectFiles","files","a","async","uploaded","i","Math","round","random","filename","onRecord","audio","onHideRecording","userActions","currentDialogObj","handleGetUserById","finally","online","isOnline","visible","setVisible","setInputValue","messageValue","setmessageValue","users","setUsers","Isloading","selectedUserId","setSelectedUserId","onClose","handleSearch","handleChangeMessage","handleChange","onShow","onAddDialog","onSelectUser","userData","isEdit","setIsEdit","isDoneAvatar","setIsDoneAvatar","uploadAvatar","noWay","modal","setModal","handleChangeInput","handleChangeData","Message","date","isMe","readed","isTyping","MessageAudio","audioSrc","audioElem","isPlaying","setIsPlaying","progress","setProgress","currentTime","setCurrentTime","ref","src","preload","style","width","onClick","pause","play","alt","number","mins","floor","secs","toFixed","convertCurrentTime","classnames","isAudio","isReaded","content","trigger","shape","icon","reactStringReplace","match","emoji","set","key","color","fontSize","renderAttachments","Messages","height","classNames","tip","index","footer","onCancel","DialogItem","lastMessage","to","getMessageTime","parseISO","renderLastMessage","unreaded","Time","distanceInWordsToNow","addSuffix","locale","ruLocale","Readed","Dialogs","Search","placeholder","onChange","orderBy","image","Empty","PRESENTED_IMAGE_SIMPLE","Avatar","handleOpenProfile","id","substr","char","charCodeAt","r","g","b","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatarFromHash","firstChar","toUpperCase","background","Status","btnVisiable","setBtnVisiable","onVisibleChange","aria-label","TextArea","Input","ChatInput","onSelect","emojiTag","onKeyUp","autoSize","minRows","maxRows","onFiles","containerProps","uploadProps","accept","multiple","htmlFor","FormField","touched","errors","values","handleBlur","Item","validateStatus","hasFeedback","help","prefix","onBlur","Option","Select","SideBar","options","onOk","disabled","loading","label","showSearch","defaultActiveFirstOption","showArrow","filterOption","notFoundContent","autosize","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadsFiles","previewVisible","setPreviewVisible","fileList","setFileList","action","listType","onPreview","preview","originFileObj","onRemove","Profile","centered","LoadingOutlined","last_seen","FileImageFilled","ContactsFilled","MailOutlined","startsWith","rel","href","IdcardOutlined","HddOutlined","marginTop","marginBottom","zIndex","Edit","LoginForm","handleSubmit","onSubmit","password","htmlType","isAuth","rules","test","password2","Object","keys","initialState","combineReducers","state","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducers","applyMiddleware","withFormik","mapPropsToValues","validate","validations","setSubmitting","history","push","displayName","RegisterForm","isValid","dirty","renderTextInfo","verified","CheckInfo","search","setVerified","checking","setChecking","setInfo","subTitle","extra","Auth","exact","path","component","withRouter","pop","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b9c17e9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button as BaseButton } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport './button.scss'\r\nimport className from 'classnames'\r\n\r\nconst Button = (props) => (<BaseButton {...props} className={className('button',props.className, {'button--large' : props.size === 'large'})}/>\r\n)\r\nButton.propTypes = {\r\n    className: PropTypes.string\r\n} \r\n\r\nexport default Button;","import React from 'react';\r\nimport './whiteblock.scss'\r\n\r\n\r\nconst WhiteBlock = ({ children }) => {\r\n    return (\r\n        <div className=\"block\">{children}</div>\r\n    );\r\n}\r\n\r\nexport default WhiteBlock;","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = \"https://mernchatbackend.herokuapp.com\";\r\naxios.defaults.headers.common['token'] = window.localStorage.token;\r\n\r\nwindow.axios = axios\r\nexport default axios","import { axios } from 'core';\r\n\r\nexport default {\r\n    getAll: () => axios.get(\"/dialogs\"),\r\n    create: (partnerId,value) => axios.post(\"/dialogs\",{partner:partnerId,text:value }),\r\n    delete: _id => axios.delete(`/dialog/${_id}`)\r\n}","import { axios } from 'core';\r\n\r\nexport default {\r\n    getAllByDialogId: _id => axios.get(\"/messages?dialog=\" + _id),\r\n    send: (text, dialog, attachments) => axios.post(\"/messages\", {\r\n        text,\r\n        dialog,\r\n        attachments\r\n    }),\r\n    removeById: _id => axios.delete(\"/messages?id=\" + _id)\r\n}","import { axios } from 'core';\r\n\r\nexport default {\r\n    signIn: obj => axios.post(\"/user/signin\", obj), \r\n    signUp: obj => axios.post('/user/signup', obj),\r\n    getMe: () => axios.get(\"/user/me\"),\r\n    verify: hash => axios.get(`/user/verify?hash=${hash}`),\r\n    findUsers: name => axios.get(`/user/find?query=${name}`),\r\n    getUserDataById: _id => axios.get(`/user/${_id}`),\r\n    uploadAvatar: (_id, data) => axios.post(`/user/avatar/${_id}`,{url: data}),\r\n    editData: (_id,data) => axios.post(`/user/edit/${_id}`,{fullname: data.fullname, email: data.email, bio: data.bio})\r\n}","import { axios } from 'core';\r\n\r\nexport default {\r\n    upload: file => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\",file);\r\n       return axios.post('/files', formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n               \r\n            }\r\n        })\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nconst socket = io(\"https://mernchatbackend.herokuapp.com\")\r\n\r\nexport default socket","import { dialogsApi } from 'utils/api'\r\nimport socket from 'core/socket';\r\nconst actions = {\r\n    setDialogs: items => ({\r\n        type: 'DIALOGS:SET_ITEMS',\r\n        payload: items\r\n    }),\r\n    setStatus: bool => ({\r\n        type: 'DIALOGS:CHANGE_MESSAGE',\r\n        payload: bool\r\n    }),\r\n    setCurrentDialogId: _id => dispatch => {\r\n        socket.emit('DIALOGS:JOIN', _id);\r\n        dispatch({\r\n            type:'DIALOGS:SET_CURRENT_DIALOG_ID',\r\n            payload: _id,\r\n        })\r\n    },\r\n    updateReadedStatus: ({userId, dialogId}) => ({\r\n        type: 'DIALOGS:LAST_MESSAGE_READED_STATUS',\r\n        payload: {\r\n            userId,\r\n            dialogId,\r\n          },\r\n    }),\r\n    updateUnreadedStatus: (_id) => ({\r\n        type: 'DIALOGS:SET_UNREADED',\r\n        payload: _id\r\n    })\r\n    ,\r\n    fetchDialogs: userId => dispatch => {\r\n        dialogsApi.getAll().then(({data}) => {   \r\n         dispatch(actions.setDialogs(data))\r\n         dispatch(actions.updateUnreadedStatus(userId))\r\n        })\r\n    },\r\n    \r\n}\r\n\r\nexport default actions","import { messagesApi } from 'utils/api'\r\n\r\nconst actions = {\r\n    setMessages: items => ({\r\n        type: 'MESSAGES:SET_ITEMS',\r\n        payload: items\r\n    }),\r\n    onRemoveMessage: _id => dispatch => {\r\n      dispatch({\r\n        type: 'MESSAGES:REMOVE_MESSAGE',\r\n        payload: _id\r\n      })\r\n      messagesApi\r\n      .removeById(_id)\r\n      .catch( err => {\r\n        dispatch(actions.setIsLoading(false))\r\n      })\r\n    },\r\n    addMessage: message => (dispatch, getState) => {\r\n        const { dialogs } = getState();\r\n        const { currentDialogId } = dialogs\r\n        if (currentDialogId === window.location.pathname.split('dialog/')[1]) {\r\n          dispatch({\r\n            type: \"MESSAGES:ADD_MESSAGE\",\r\n            payload: message\r\n          });\r\n        }\r\n      },\r\n      fetchSendMessage: ({ text, dialogId, attachments }) => dispatch => {\r\n        return messagesApi.send(text, dialogId, attachments);\r\n      },\r\n    setIsLoading: bool => ({\r\n        type: 'MESSAGES:SET_IS_LOADING',\r\n        payload: bool\r\n    }),\r\n    fetchMessages: dialogId => dispatch => {\r\n        dispatch(actions.setIsLoading(true))\r\n        messagesApi\r\n            .getAllByDialogId(dialogId)\r\n            .then(({data}) => {       \r\n            dispatch(actions.setMessages(data))\r\n        }).catch(() => {\r\n        dispatch(actions.setIsLoading(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport default actions","import { notification } from 'antd';\r\n\r\nexport default ({text,type = \"info\", title, duration = 3}) => {\r\n    notification[type]({\r\n        message: title,\r\n        description: text,\r\n        duration: duration\r\n    })\r\n}","export default  (attachments) => {\r\n  if(!attachments) return null\r\n    const file = attachments[0]\r\n    return attachments.length &&  file.ext === \"webm\"\r\n  }","import format from 'date-fns/format'\r\nimport isToday from 'date-fns/isToday'\r\n\r\nexport default createdAt => {\r\n    if (isToday(createdAt)) {\r\n        return format(createdAt, 'HH:mm');\r\n      } else {\r\n        return format(createdAt, 'dd/mm/yyyy');\r\n      }\r\n};","import { userApi,fileApi } from 'utils/api'\r\nimport { openDialogs } from 'utils/helpers'\r\nconst actions = {\r\n    setUserData: user => ({\r\n        type: 'USER:SET_DATA',\r\n        payload: user\r\n    }),\r\n    setIsAuth: bool => ({\r\n      type: 'USER:SET_IS_AUTH',\r\n      payload: bool\r\n  }),\r\n    setChangeData: user => ({\r\n      type: 'USER:CHANGE_DATA',\r\n      payload: user\r\n    })\r\n    ,\r\n    setData: user => ({\r\n      type: 'USER:SET_USER_DATA',\r\n      payload: user\r\n    }),\r\n    setAvatar: url => ({\r\n      type: 'USER:SET_AVATAR',\r\n      payload: url\r\n    }),\r\n    fetchUserData: () => dispatch => {\r\n        userApi.getMe()\r\n        .then(({data}) => {\r\n            dispatch(actions.setUserData(data))\r\n        })\r\n        .catch( err => {\r\n          if(err.response.status === 403) {\r\n            dispatch(actions.setIsAuth(false))\r\n            delete window.localStorage.token\r\n          }\r\n        })\r\n    },\r\n    fetchUserLogin: obj => dispatch => {\r\n        return userApi.signIn(obj)\r\n        .then(({data}) => {\r\n            const {status, token} = data;\r\n            if(status === \"error\"){\r\n                openDialogs({\r\n                  title: \"Ошибка при авторизации\",\r\n                  text: \"Неверный логин или пароль\", \r\n                  type: \"error\"\r\n                })\r\n              }\r\n              else {\r\n                openDialogs({\r\n                  text: \"Отлично!\",\r\n                  title: \"Авторизация успешна!\",\r\n                  type: \"success\"\r\n                })\r\n              dispatch(actions.setUserData(data))\r\n              window.axios.defaults.headers.common[\"token\"] = token;\r\n              window.localStorage[\"token\"] = token\r\n              dispatch(actions.fetchUserData())\r\n              dispatch(actions.setIsAuth(true))\r\n            }\r\n            return data\r\n        });\r\n    },\r\n    fetchUserRegister: obj => dispatch =>{\r\n      return userApi.signUp(obj);\r\n  }, \r\n    getUserById: _id => dispatch => {\r\n       return userApi.getUserDataById(_id).then( ({data}) => {\r\n         dispatch(actions.setData(data))\r\n       })\r\n    },\r\n    setUserAvatar: (file,_id) => dispatch => {\r\n      return fileApi.upload(file)\r\n      .then(({data}) => userApi.uploadAvatar(_id, data.file.url))\r\n      .then(({data})=> dispatch(actions.setAvatar(data.file.avatar)))\r\n    },\r\n    setChangeInfo: (_id,data) => dispatch => {\r\n      return userApi.editData(_id,data).then(({data}) => dispatch(actions.setChangeData(data.info)))\r\n    } \r\n   \r\n}\r\n\r\nexport default actions","const actions = {\r\n    setAttachments: items => ({\r\n      type: \"ATTACHMENTS:SET_ITEMS\",\r\n      payload: items\r\n    }),\r\n    removeAttachments: file => ({\r\n      type: \"ATTACHMENTS:REMOVE_ITEM\",\r\n      payload: file\r\n    })\r\n  };\r\n  \r\n  export default actions;","import React, {useState, useEffect,useCallback} from 'react';\r\nimport { Dialogs as BaseDialogs } from 'components'\r\nimport { dialogsActions } from 'redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport socket from 'core/socket'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n   const { items,fetchDialogs,setCurrentDialogId,currentDialogId,userId,updateReadedStatus } = props\r\n    const [inputValue ,setValue] = useState(\"\");\r\n    const [filtred, setFiltredItems] = useState(Array.from(items));\r\n \r\n    const onChangeInput = useCallback((value=\"\") => {\r\n        setFiltredItems(\r\n            items.filter(\r\n                dialog =>\r\n                dialog.author.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0 ||\r\n                dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0 \r\n            )\r\n        );\r\n        setValue(value)\r\n    },[items])\r\n\r\n   \r\n   \r\n    useEffect(() => {\r\n      setCurrentDialogId(window.location.pathname.split('dialog/')[1])\r\n    },[items,setCurrentDialogId])\r\n\r\n    useEffect(() => {\r\n        if (items.length) {\r\n          onChangeInput();\r\n        }\r\n      }, [items,onChangeInput]);\r\n\r\n    useEffect(() => {\r\n\r\n    const onNewMessage = () => {\r\n        fetchDialogs(userId)\r\n    }\r\n\r\n    fetchDialogs(userId)\r\n    socket.on('SERVER:DIALOG_CREATED', onNewMessage);\r\n    socket.on('SERVER:NEW_MESSAGE', onNewMessage);\r\n    socket.on('SERVER:MESSAGES_READED', updateReadedStatus);\r\n    return ( ) => {\r\n        socket.removeListener(\"SERVER:DIALOG_CREATED\", onNewMessage);\r\n        socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n    };\r\n    },[fetchDialogs,updateReadedStatus,userId])\r\n    \r\n    filtred.forEach(item => {\r\n        item.author._id === userId ? item.friend = item.partner : item.friend = item.author\r\n    })\r\n    return (\r\n        <BaseDialogs \r\n        userId={userId}\r\n        items={filtred}\r\n        onSearch={onChangeInput}\r\n        inputValue={inputValue}\r\n        currentDialogId={currentDialogId}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(({dialogs}) => {\r\n   return dialogs\r\n},dialogsActions)(Dialogs)","import React, {useEffect,useRef,useState} from 'react';\r\nimport { Messages as BaseMessages } from 'components'\r\nimport { messagesActions } from 'redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport socket from 'core/socket'\r\nimport {Empty } from 'antd'\r\n\r\nconst Dialogs = ({\r\n    isLoading,\r\n    currentDialogId, \r\n    fetchMessages, \r\n    items,\r\n    addMessage,\r\n    user,\r\n    onRemoveMessage,\r\n    attachments,\r\n    isVisiable,\r\n    setIsVisiable,\r\n  \r\n}) => {\r\n\r\n  const [previewImage, setPreviewImage] = useState(null)\r\n  const [blockHeight, setBlockHeight] = useState(135);\r\n \r\n\r\n    const messageRef = useRef(null)\r\n    \r\n    useEffect(() => {\r\n      if (attachments.length) {\r\n        setBlockHeight(245);\r\n      } else {\r\n        setBlockHeight(135);\r\n      }\r\n    }, [attachments]); \r\n\r\n    useEffect( () => {\r\n      socket.on()\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n      const onNewMessage = (data) => {\r\n        addMessage(data)\r\n     }\r\n\r\n        if (currentDialogId) {\r\n          fetchMessages(currentDialogId);\r\n        }\r\n        socket.on('SERVER:NEW_MESSAGE', onNewMessage);\r\n       \r\n        return () => socket.removeListener('SERVER:NEW_MESSAGE', onNewMessage);\r\n      }, [currentDialogId,fetchMessages,addMessage]);\r\n    \r\n \r\n    useEffect( () => {\r\n      if(messageRef.current){\r\n          messageRef.current.scrollTo(0,9999);\r\n      }\r\n    },[items])\r\n    \r\n      if(currentDialogId === ''){\r\n          return  <Empty description=\"Откройте диалог\"/>\r\n      }\r\n    return ( \r\n        <BaseMessages \r\n        isVisiable={isVisiable}\r\n        setIsVisiable={setIsVisiable}\r\n        items={items} \r\n        isLoading={isLoading} \r\n        user={user} \r\n        blockHeight={blockHeight}\r\n        blockRef={messageRef}\r\n        onRemoveMessage={onRemoveMessage}\r\n        setPreviewImage={setPreviewImage}\r\n        previewImage={previewImage}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default connect(\r\n    ({messages,dialogs,user,attachments})=> ({\r\n    currentDialogId: dialogs.currentDialogId ,\r\n    items: messages.items,\r\n    attachments: attachments.items,\r\n    isLoading: messages.isLoading,\r\n    user: user.data\r\n}),messagesActions)(Dialogs)","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fileApi } from 'utils/api';\r\nimport socket from 'core/socket';\r\n\r\nimport { ChatInput as ChatInputBase } from 'components';\r\n\r\nimport { messagesActions,attachmentsActions } from 'redux/actions';\r\n\r\nconst ChatInput = props => {\r\n  const {\r\n    dialogs: { currentDialogId },\r\n    attachments,\r\n    fetchSendMessage,\r\n    setAttachments,\r\n    removeAttachments,\r\n    user,\r\n  } = props;\r\n  // if (!currentDialogId) {\r\n  //   return null;\r\n  // }\r\n\r\n  window.navigator.getUserMedia =\r\n    window.navigator.getUserMedia ||\r\n    window.navigator.mozGetUserMedia ||\r\n    window.navigator.msGetUserMedia ||\r\n    window.navigator.webkitGetUserMedia;\r\n\r\n  const [value, setValue] = useState('');\r\n  const [isRecording, setIsRecording] = useState('');\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!emojiPickerVisible);\r\n  };\r\n\r\n  const onRecord = () => {\r\n    if (navigator.getUserMedia) {\r\n      navigator.getUserMedia({ audio: true }, onRecording, onError);\r\n    }\r\n  };\r\n\r\n  const onRecording = stream => {\r\n    const recorder = new MediaRecorder(stream);\r\n    setMediaRecorder(recorder);\r\n\r\n    recorder.start();\r\n\r\n    recorder.onstart = () => {\r\n      setIsRecording(true);\r\n    };\r\n\r\n    recorder.onstop = () => {\r\n      setIsRecording(false);\r\n    };\r\n\r\n    recorder.ondataavailable = e => {\r\n      const file = new File([e.data], 'audio.webm');\r\n      setLoading(true);\r\n      fileApi.upload(file).then(({ data }) => {\r\n        sendAudio(data.file._id).then(() => {\r\n          setLoading(false);\r\n        });\r\n      });\r\n    };\r\n  };\r\n\r\n  const onError = err => {\r\n    console.log('The following error occured: ' + err);\r\n  };\r\n\r\n  const handleOutsideClick = (el, e) => {\r\n    if (el && !el.contains(e.target)) {\r\n      setShowEmojiPicker(false);\r\n    }\r\n  };\r\n\r\n  const addEmoji = ({ colons }) => {\r\n    setValue((value + ' ' + colons).trim());\r\n  };\r\n\r\n  const sendAudio = audioId => {\r\n    return fetchSendMessage({\r\n      text: null,\r\n      dialogId: currentDialogId,\r\n      attachments: [audioId],\r\n    });\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (isRecording) {\r\n      mediaRecorder.stop();\r\n    } else if (value || attachments.length) {\r\n      fetchSendMessage({\r\n        text: value,\r\n        dialogId: currentDialogId,\r\n        attachments: attachments.map(file => file.uid),\r\n      });\r\n      setValue('');\r\n      setAttachments([]);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = e => {\r\n    socket.emit('DIALOGS:TYPING', { dialogId: currentDialogId, user });\r\n    if (e.keyCode === 13) {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const onHideRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n\r\n  const onSelectFiles = async files => {\r\n    let uploaded = [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      const uid = Math.round(Math.random() * 1000);\r\n      uploaded = [\r\n        ...uploaded,\r\n        {\r\n          uid,\r\n          name: file.name,\r\n          status: 'uploading',\r\n        },\r\n      ];\r\n      setAttachments(uploaded);\r\n      // eslint-disable-next-line no-loop-func\r\n      await fileApi.upload(file).then(({ data }) => {\r\n        uploaded = uploaded.map(item => {\r\n          if (item.uid === uid) {\r\n            return {\r\n              status: 'done',\r\n              uid: data.file._id,\r\n              name: data.file.filename,\r\n              url: data.file.url,\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    }\r\n    setAttachments(uploaded);\r\n  };\r\n \r\n  useEffect(() => {\r\n    const el = document.querySelector('.chat-input__smile-btn');\r\n    document.addEventListener('click', handleOutsideClick.bind(this, el));\r\n    return () => {\r\n      document.removeEventListener('click', handleOutsideClick.bind(this, el));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ChatInputBase\r\n      value={value}\r\n      setValue={setValue}\r\n      emojiPickerVisible={emojiPickerVisible}\r\n      toggleEmojiPicker={toggleEmojiPicker}\r\n      addEmoji={addEmoji}\r\n      handleSendMessage={handleSendMessage}\r\n      sendMessage={sendMessage}\r\n      onSelectFiles={onSelectFiles}\r\n      attachments={attachments}\r\n      isRecording={isRecording}\r\n      onRecord={onRecord}\r\n      onHideRecording={onHideRecording}\r\n      isLoading={isLoading}\r\n      removeAttachments={removeAttachments}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ dialogs, attachments, user }) => ({\r\n    dialogs,\r\n    attachments: attachments.items,\r\n    user: user.data,\r\n  }),\r\n  { ...messagesActions, ...attachmentsActions },\r\n)(ChatInput);","import React from \"react\";\r\nimport { Status as StatusBase } from \"components\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions,dialogsActions } from 'redux/actions'\r\n\r\nconst Status = (props) => {\r\n  const { currentDialogId, user, dialogs,setIsVisiable,isVisiable,getUserById, } = props\r\n  if (!dialogs.length || !currentDialogId) {\r\n    return null;\r\n  }\r\n  \r\n  const currentDialogObj = dialogs.filter(\r\n    dialog => dialog._id === currentDialogId\r\n  )[0];\r\n\r\n  let partner = {};\r\n  if(currentDialogObj) {\r\n    if (currentDialogObj.author._id === user._id) {\r\n      partner = currentDialogObj.partner;\r\n    } else {\r\n      partner = currentDialogObj.author;\r\n    }\r\n  }\r\n  \r\n  const handleGetUserById = (_id) => {\r\n    getUserById(_id).finally(() => setIsVisiable(!isVisiable))\r\n  }\r\n  \r\n\r\n  return <StatusBase  handleGetUserById={handleGetUserById} online={partner.isOnline} fullname={partner.fullname} setIsVisiable={setIsVisiable} isVisiable={isVisiable} user={user}/>;\r\n};\r\n\r\nexport default connect(({ dialogs, user }) => ({\r\n  dialogs: dialogs.items,\r\n  currentDialogId: dialogs.currentDialogId,\r\n  user: user.data,\r\n}),{...userActions,...dialogsActions})(Status);","import React,{useState} from 'react';\r\nimport { SideBar as BaseSideBar } from 'components'\r\nimport { connect } from 'react-redux'\r\nimport { userApi, dialogsApi } from 'utils/api'\r\n\r\nconst SideBar = ({user}) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [messageValue, setmessageValue] = useState('')\r\n    const [users, setUsers] = useState([])\r\n    const [Isloading, setIsLoading] = useState(false)\r\n    const [selectedUserId, setSelectedUserId] = useState(false)\r\n\r\n    const onClose = () => {\r\n        setVisible(false)\r\n    }\r\n    const onShow = () => {\r\n        setVisible(true)\r\n    }\r\n    const handleChange = (value) => {\r\n        setInputValue(value)\r\n    }\r\n    const handleChangeMessage = (e) => {\r\n        setmessageValue(e.target.value)\r\n    }\r\n    const handleSearch = (value) => {\r\n        setIsLoading(true);\r\n    userApi\r\n      .findUsers(value)\r\n      .then(({ data }) => {\r\n        setUsers(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n    const onSelectUser = userId => {\r\n        setSelectedUserId(userId)\r\n    }\r\n    const addDialog = () => {\r\n       dialogsApi\r\n      .create(selectedUserId,messageValue)\r\n      .then(({ data }) => {\r\n        \r\n       onClose()\r\n      })\r\n      .catch((err) => {\r\n      \r\n      });\r\n    }\r\n\r\n    return <BaseSideBar \r\n    user={user} \r\n    users={users} \r\n    messageValue={messageValue}\r\n    inputValue={inputValue} \r\n    handleSearch={handleSearch} \r\n    handleChangeMessage={handleChangeMessage}\r\n    handleChange={handleChange} \r\n    onClose={onClose} \r\n    selectedUserId={selectedUserId}\r\n    onShow={onShow} \r\n    visible={visible}\r\n    Isloading={Isloading}\r\n    onAddDialog={addDialog}\r\n    onSelectUser={onSelectUser}\r\n    />\r\n}\r\nexport default connect( ({user,dialogs})  => ({user: user.data}))(SideBar);    ","import React, {useState} from 'react';\r\nimport { Profile as BaseProfile } from 'components'\r\nimport { userActions } from 'redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Profile = (props) => {\r\n    const { userData,userId,setUserAvatar,dialogs,isVisiable,setIsVisiable } = props\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [isDoneAvatar, setIsDoneAvatar] = useState(false)\r\n    const [previewImage, setPreviewImage] = useState(null)\r\n        const uploadAvatar = (file) => {\r\n            if(userData) {\r\n                setUserAvatar(file,userData._id).finally(() => setIsDoneAvatar(false))\r\n            }\r\n        }\r\n    return (\r\n        <BaseProfile\r\n        isDoneAvatar={isDoneAvatar}\r\n        setIsDoneAvatar={setIsDoneAvatar}\r\n        userData={userData}\r\n        uploadAvatar={uploadAvatar}\r\n        userId={userId}\r\n        isEdit={isEdit}\r\n        isVisiable={isVisiable}\r\n        setIsVisiable={setIsVisiable}\r\n        setIsEdit={setIsEdit}\r\n        setPreviewImage={setPreviewImage}\r\n        previewImage={previewImage}\r\n        currentDialogId={dialogs}\r\n        />\r\n    )\r\n}\r\nexport default connect(({user,dialogs}) => ({\r\n    userData: user.userData,\r\n    dialogs: dialogs.currentDialogId,\r\n    userId: user.data._id\r\n}),userActions)(Profile)","import React from 'react';\r\nimport { Avatar as BaseAvatar } from 'components'\r\nimport { userActions } from 'redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Avatar = ({getUserById,isVisiable,setIsVisiable,user,noWay,}) => {\r\n    \r\n    const handleGetUserById = (_id) => {\r\n        getUserById(_id).finally(() => setIsVisiable(!isVisiable))\r\n       }\r\n\r\n    return (\r\n        <BaseAvatar \r\n        isVisiable={isVisiable}\r\n        setIsVisiable={setIsVisiable}\r\n        handleGetUserById={handleGetUserById}\r\n        user={user}\r\n        noWay={noWay}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(({dialogs}) => {\r\n   return dialogs\r\n},userActions)(Avatar)","import React, {useState} from 'react';\r\nimport { Edit as BaseEdit } from 'components'\r\nimport { userActions } from 'redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Edit = (props) => {\r\n    const { setChangeInfo,data,modal ,setModal} = props\r\n    const [ value,setValue ] = useState({\r\n        fullname: data.fullname,\r\n        email: data.email,\r\n        bio: data.bio\r\n    })\r\n    const handleChangeInput = (e) => {\r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n   \r\n    const handleChangeData = () => {\r\n        return (\r\n        value.fullname === '' ? value.fullname = data.fullname : value.fullname,\r\n        value.email === '' ? value.email = data.email : value.email,\r\n        value.bio === '' ? value.bio = data.bio : value.bio,\r\n        setChangeInfo(data._id, value)\r\n        )\r\n    }\r\n    return (\r\n        <BaseEdit \r\n        value={value}\r\n        modal={modal}\r\n        setModal={setModal}\r\n        handleChangeInput={handleChangeInput}\r\n        handleChangeData={handleChangeData}\r\n        />\r\n    )\r\n}\r\nexport default connect(({user}) => {\r\n   return user\r\n},userActions)(Edit)","import React,{useState,useRef, useEffect} from 'react';\r\nimport './message.scss'\r\nimport classnames from 'classnames'\r\nimport { Time,Readed } from 'components'\r\nimport { Avatar } from 'containers'\r\nimport { Popover, Button, Icon } from 'antd';\r\nimport { convertCurrentTime, isAudio} from 'utils/helpers'\r\nimport reactStringReplace from 'react-string-replace'\r\nimport { Emoji } from 'emoji-mart';\r\n\r\nconst Message = ({ \r\n    text,\r\n    date,\r\n    user,\r\n    isMe,\r\n    readed,\r\n    attachments,\r\n    isTyping, \r\n    audio,\r\n    onRemoveMessage,\r\n    setPreviewImage,\r\n    isVisiable,\r\n    setIsVisiable\r\n}) => {\r\n\r\n const renderAttachments = (item) => {\r\n   if(item.ext !== 'webm') {\r\n     return  <div onClick={() => setPreviewImage(item.url)} key={item._id} className=\"message__attachments-item\">\r\n     <div className=\"message__attachments-item-overlay\" >\r\n       <Icon type=\"eye\" style={{color: 'white', fontSize: '18px'}}/>\r\n     </div>\r\n       <img src={item.url} alt=\"123\" />\r\n   </div>\r\n   }\r\n   else {\r\n     return <MessageAudio audioSrc={item.url} key={item._id}/>\r\n   }\r\n }\r\n\r\n \r\n    const MessageAudio = ({ audioSrc }) => {\r\n        const audioElem = useRef(null);\r\n        const [isPlaying, setIsPlaying] = useState(false);\r\n        const [progress, setProgress] = useState(0);\r\n        const [currentTime, setCurrentTime] = useState(0);\r\n      \r\n        const togglePlay = () => {\r\n          if (!isPlaying) {\r\n            audioElem.current.play();\r\n          } else {\r\n            audioElem.current.pause();\r\n          }\r\n        };\r\n      \r\n        useEffect(() => {\r\n          audioElem.current.addEventListener(\r\n            'playing',\r\n            () => {\r\n              setIsPlaying(true);\r\n            },\r\n            false,\r\n          );\r\n          audioElem.current.addEventListener(\r\n            'ended',\r\n            () => {\r\n              setIsPlaying(false);\r\n              setProgress(0);\r\n              setCurrentTime(0);\r\n            },\r\n            false,\r\n          );\r\n          audioElem.current.addEventListener(\r\n            'pause',\r\n            () => {\r\n              setIsPlaying(false);\r\n            },\r\n            false,\r\n          );\r\n          audioElem.current.addEventListener('timeupdate', () => {\r\n            const duration = (audioElem.current && audioElem.current.duration) || 0;\r\n            setCurrentTime(audioElem.current.currentTime);\r\n            setProgress((audioElem.current.currentTime / duration) * 100);\r\n          });\r\n        }, []);\r\n        return (\r\n            <div className=\"message__audio\">\r\n              <audio ref={audioElem} src={audioSrc} preload=\"auto\" />\r\n              <div className=\"message__audio-progress\" style={{ width: progress + '%' }} />\r\n              <div className=\"message__audio-info\">\r\n                <div className=\"message__audio-btn\">\r\n                  <button onClick={togglePlay}>\r\n                    {isPlaying ? (\r\n                      <img src=\"https://res.cloudinary.com/df79xnsj1/image/upload/v1647949806/pause_r8lgop.svg\" alt=\"Pause svg\" />\r\n                    ) : (\r\n                      <img src=\"https://res.cloudinary.com/df79xnsj1/image/upload/v1647949809/play_xotsir.svg\" alt=\"Play svg\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                <div className=\"message__audio-wave\">\r\n                  <img src=\"https://res.cloudinary.com/df79xnsj1/image/upload/v1647949811/wave_fv1cgb.svg\" alt=\"Wave svg\" />\r\n                </div>\r\n                <span className=\"message__audio-duration\">{convertCurrentTime(currentTime)}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        };\r\n      \r\n    return (\r\n        <div className={classnames(\r\n         'message', {'message--isme': isMe,\r\n         'message--is-typing' : isTyping,\r\n         'message--image': isAudio(attachments) && attachments && attachments.length  === 1 && !text,\r\n         \"message--is-audio\": isAudio(attachments),\r\n         })}>\r\n            <div className=\"message__content\">\r\n             { (<Readed isMe={isMe} isReaded={readed}/>) }\r\n            { isMe && <Popover content={\r\n            <div>\r\n              <Button onClick={onRemoveMessage}>Удалить сообщение</Button>\r\n            </div>\r\n            }\r\n            trigger=\"click\">\r\n              <div className=\"message__icon-actions\">\r\n            <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\r\n              </div>\r\n            </Popover>}\r\n            <div className=\"message__avatar\">\r\n                <Avatar user={user} setIsVisiable={setIsVisiable} isVisiable={isVisiable} noWay={true}/>\r\n            </div>\r\n            <div className=\"message__info\">\r\n              <div className=\"message__user\">\r\n                {user.fullname}\r\n              </div>\r\n                {(text || isTyping) && \r\n                <div className=\"message__bubble\">\r\n                    {text && \r\n                    <p className=\"message__text\">\r\n                      {reactStringReplace(text,/:(.+?):/g, (match, i) => (\r\n                      <Emoji emoji={match} set=\"apple\" size={24} key={i} className=\"smile\"/>\r\n                    ))}\r\n                    </p>\r\n                    }\r\n                   {isTyping &&  <div className=\"message__typing\">\r\n                         <span />\r\n                         <span />\r\n                         <span />\r\n                    </div>}\r\n                </div>}\r\n                {audio && <MessageAudio audioSrc={audio}/>}\r\n                    {attachments &&  \r\n                    (<div className=\"message__attachments\">\r\n                        {attachments.map((item) =>  renderAttachments(item))} \r\n                    </div>\r\n                    )}\r\n                    { date && <span className=\"message__date\">\r\n                        <Time date={date}/>    \r\n                    </span>}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","\r\nexport default number => {\r\n  const mins = Math.floor(number / 60);\r\n  const secs = (number % 60).toFixed();\r\n  return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n};","import React from 'react';\r\nimport {Empty, Spin, Modal } from 'antd'\r\nimport { Message } from 'components'\r\nimport classNames from 'classnames'\r\nimport './messages.scss'\r\n\r\n\r\nconst Messages = ({\r\n  blockRef,\r\n  isLoading,\r\n  items, \r\n  user,\r\n  onRemoveMessage, \r\n  blockHeight,\r\n  previewImage,\r\n  setPreviewImage,\r\n  setIsVisiable,\r\n  isVisiable\r\n}) => {\r\n  \r\n   return (\r\n    <div className=\"chat__dialog-messages\" style={{ height: `calc(100% - ${blockHeight}px)` }}>\r\n     <div \r\n     ref={blockRef} \r\n     className={classNames('messages', {\"messages--loading\" : isLoading})}\r\n    >\r\n        {isLoading  ? (\r\n          <Spin tip=\"Loading...\" size=\"large\">\r\n          \r\n        </Spin>\r\n        ) : \r\n        items && items.length ? (\r\n        items.map((item,index) => (\r\n          <Message \r\n          isVisiable={isVisiable}\r\n          setIsVisiable={setIsVisiable}\r\n          key={index}\r\n          {...item}\r\n          onRemoveMessage={onRemoveMessage.bind(this, item._id)}\r\n          setPreviewImage={setPreviewImage}\r\n          isMe={user._id === item.user._id}\r\n           /> ))\r\n          ) : \r\n          (\r\n            <Empty description=\"Откройте диалог\"/>\r\n          )}\r\n           <Modal\r\n           width=\"600px\"\r\n           visible={!!previewImage}\r\n           footer={null}\r\n           onCancel={() => setPreviewImage(null)}\r\n            >\r\n          <img src={previewImage} style={{width: '100%'}} alt=\"prewiew\"/>\r\n          </Modal>\r\n     </div>\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport '../Dialogs/dialogs.scss'\r\nimport { getMessageTime } from 'utils/helpers'\r\nimport {  Readed,Avatar } from 'components'\r\nimport classnames from 'classnames'\r\nimport parseISO from 'date-fns/parseISO'\r\nimport { Link } from 'react-router-dom'\r\nimport reactStringReplace from 'react-string-replace'\r\nimport { Emoji } from 'emoji-mart';\r\n\r\nconst renderLastMessage = (message,userId ) => {\r\n    if(message.text === null) {\r\n        return message.user._id === userId ? `You: Voice message` : 'Voice message'\r\n    }\r\n    else if (message.text === '' && message.attachments){\r\n        return message.user._id === userId ? `You: attachments` : `attachments`\r\n    }\r\n  \r\n    else {\r\n    return message.user._id === userId ? `You: ` + message.text && reactStringReplace(message.text, /:(.+?):/g, (match,i) => ( <Emoji emoji={match} set=\"apple\" size={24} key={i}/>)) : message.text && reactStringReplace(message.text, /:(.+?):/g, (match,i) => ( <Emoji emoji={match} set=\"apple\" size={24} key={i}/>))\r\n    }\r\n}\r\nconst DialogItem = (props) => {\r\n   let { _id,isMe,currentDialogId,lastMessage,userId,partner,friend} = props\r\n   currentDialogId = window.location.pathname.split('dialog/')[1]\r\n   console.log(lastMessage);\r\n    return(\r\n        <Link to={`/dialog/${_id}`}>\r\n        <div className={classnames(\"dialogs__item\", {\r\n        'dialogs__item--online': partner.isOnline,\r\n        'dialogs__item--selected': currentDialogId === _id}\r\n    )}\r\n        >\r\n        <div className=\"dialogs__item-avatar\" >\r\n            <Avatar user={friend}/>\r\n        </div>\r\n        <div className=\"dialogs__item-info\">\r\n            <div className=\"dialogs__item-info-top\">\r\n                <b>{friend.fullname}</b>\r\n                <span>\r\n                   { lastMessage.createdAt !== null ? getMessageTime(parseISO(lastMessage.createdAt)) : ''}\r\n                </span>\r\n            </div>\r\n            <div className=\"dialogs__item-info-bottom\">\r\n            <p>{renderLastMessage(lastMessage,userId)}</p>\r\n            {isMe && <Readed isMe={true} isReaded={lastMessage.readed}/>}\r\n            {\r\n            lastMessage.unreaded > 0 && lastMessage.readed === false ?\r\n             <div className=\"dialogs__item-info-bottom-count\">\r\n            {lastMessage.unreaded > 9 ? '+9' : lastMessage.unreaded}\r\n            </div>\r\n            :\r\n            null\r\n            }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </Link>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport distanceInWordsToNow from 'date-fns/formatDistanceToNow'\r\nimport ruLocale from 'date-fns/locale/ru'\r\n\r\nconst Time = ({date}) => (\r\n    <>\r\n    {distanceInWordsToNow(date, {addSuffix: true, locale: ruLocale})}\r\n    </>\r\n)\r\n\r\n\r\nexport default Time;","import React from 'react';\r\n\r\n\r\nconst Readed = ({isMe,isReaded}) => {\r\n\r\n    return (\r\n        isMe && (isReaded ? (\r\n            <img \r\n            alt={`123`}\r\n            src=\"https://res.cloudinary.com/df79xnsj1/image/upload/v1647949588/1231_t9ubhx.svg\"\r\n            className=\"message__icon-readed\"\r\n            />\r\n        ) : \r\n        <img \r\n            src=\"https://res.cloudinary.com/df79xnsj1/image/upload/v1647949708/noChecked_t38rx3.svg\" \r\n            alt={`123`}\r\n            className=\" message__icon-readed message__icon-readed--no\"\r\n            />\r\n           )\r\n    )\r\n    \r\n    }\r\n\r\n\r\nexport default Readed;","import React from 'react';\r\nimport './dialogs.scss'\r\nimport { Input, Empty } from 'antd'\r\n// import { Time, Readed } from 'components'\r\nimport { DialogItem } from 'components'\r\nimport orderBy from 'lodash/orderBy'\r\n\r\n\r\nconst Dialogs = ({items,userId,onSearch, inputValue,currentDialogId}) => {\r\n    return (\r\n    <div className=\"dialogs\">\r\n        <div className=\"dialogs__search\">\r\n        <Input.Search  placeholder=\"....\" style={{width: 200}} onChange={e => onSearch(e.target.value)} value={inputValue}/>\r\n        </div>\r\n    {items.length ? (\r\n        orderBy(items,[\"created_at\"],[\"desc\"]).map((item,i) => (\r\n            <DialogItem\r\n            key={i}\r\n            {...item}\r\n            userId={userId}\r\n            items={items}\r\n            friend={item.friend}\r\n            unreaded={0}\r\n            currentDialogId={currentDialogId}\r\n            isMe={item.author._id === userId}\r\n            /> \r\n        ))\r\n      )  : (<Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Ничего не найдено\"/>)\r\n    }\r\n    </div>  \r\n    )\r\n   \r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\n\r\nimport { generateAvatarFromHash } from \"utils/helpers\";\r\n\r\nimport \"./avatar.scss\";\r\n\r\nconst Avatar = (props) => {\r\nconst { user,handleGetUserById, noWay, } = props\r\n  const handleOpenProfile =  (_id) => {\r\n    if(noWay) {\r\n      handleGetUserById(_id)\r\n    }\r\n }\r\n  if (user.avatar) {\r\n    return (\r\n      <>\r\n      <img \r\n        className=\"avatar\"\r\n        src={user.avatar}\r\n        alt={`Avatar ${user.fullname}`}\r\n        onClick={() => { handleOpenProfile(user.id)}}\r\n      />\r\n      </>\r\n    );\r\n  } else {\r\n    const { color, colorLighten } = generateAvatarFromHash(user.id);\r\n    const firstChar = user.fullname[0].toUpperCase();\r\n    return (\r\n      <div onClick={() => { handleOpenProfile(user.id)}}\r\n        style={{\r\n          background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`\r\n        }}\r\n        className=\"avatar avatar--symbol\"\r\n      >\r\n        {firstChar}\r\n      </div>\r\n    );\r\n      }\r\n};\r\n\r\n\r\nexport default Avatar;","import tinycolor from \"tinycolor2\";\r\n\r\nconst getCorrectIndex = number => {\r\n  if (number > 255) {\r\n    return 255;\r\n  }\r\n  if (number < 0) {\r\n    return 0;\r\n  }\r\n  return number > 255 ? 255 : number < 0 ? 0 : number;\r\n};\r\n\r\nexport default hash => {\r\n  const [r, g, b] = hash\r\n    .substr(hash.length - 3, hash.length)\r\n    .split(\"\")\r\n    .map(char => getCorrectIndex(char.charCodeAt(0)));\r\n  return {\r\n    color: tinycolor({ r, g, b })\r\n      .lighten(10)\r\n      .saturate(10)\r\n      .toHexString(),\r\n    colorLighten: tinycolor({ r, g, b })\r\n      .lighten(30)\r\n      .saturate(30)\r\n      .toHexString()\r\n  };\r\n};","import React, { useState } from 'react';\r\n\r\nimport classNames from 'classnames';\r\nimport { Button, Popover } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport './status.scss'\r\n\r\nconst Status = (props) => {\r\n  const { online,fullname,handleGetUserById,user } = props\r\n  const [btnVisiable, setBtnVisiable] = useState(false)\r\n  const handleVisiable = () => {\r\n    handleGetUserById(user._id)\r\n    setBtnVisiable(!btnVisiable)\r\n    // setIsVisiable(!isVisiable)\r\n  }\r\n    return (\r\n    <div className=\"chat__dialog-header\">\r\n    <div className=\"chat__dialog-header-center\">\r\n    <b className=\"chat__dialog-header-username\">{fullname}</b>\r\n      <div className=\"chat__dialog-header-status\">\r\n        <span className={classNames('status', { 'status--online': online })}>\r\n          {online ? 'онлайн' : 'офлайн'}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <Popover\r\n      visible={btnVisiable}\r\n      onVisibleChange={() => setBtnVisiable(!btnVisiable)}\r\n      className=\"chat__dialog-header-action\"\r\n      content={\r\n        <div className=\"chat__dialog-header-action-content\">\r\n          <p><Button onClick={handleVisiable}>Профиль</Button></p>\r\n          <p><Button><Link to={`/signIn`}>Выйти</Link></Button></p>\r\n        </div>\r\n      }\r\n      trigger=\"click\">\r\n      <div>\r\n        <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" aria-label='' />\r\n      </div>\r\n    </Popover>\r\n  </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default Status;","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Input } from \"antd\";\r\nimport { UploadField } from \"@navjobs/upload\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nimport { UploadsFiles } from \"components\";\r\n\r\nimport \"./chatinput.scss\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst ChatInput = props => {\r\n  const {\r\n    emojiPickerVisible,\r\n    value,\r\n    addEmoji,\r\n    setValue,\r\n    handleSendMessage,\r\n    sendMessage,\r\n    toggleEmojiPicker,\r\n    attachments,\r\n    onSelectFiles,\r\n    isRecording,\r\n    onRecord,\r\n    onHideRecording,\r\n    removeAttachments,\r\n    isLoading\r\n  } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"chat-input\">\r\n        <div>\r\n          <div className=\"chat-input__smile-btn\">\r\n            <div className=\"chat-input__emoji-picker\">\r\n              {emojiPickerVisible && (\r\n                <Picker onSelect={emojiTag => addEmoji(emojiTag)} set=\"apple\" />\r\n              )}\r\n            </div>\r\n            <Button\r\n              onClick={toggleEmojiPicker}\r\n              type=\"link\"\r\n              shape=\"circle\"\r\n              icon=\"smile\"\r\n            />\r\n          </div>\r\n          {isRecording ? (\r\n            <div className=\"chat-input__record-status\">\r\n              <i className=\"chat-input__record-status-bubble\"></i>\r\n              Recording...\r\n              <Button\r\n                onClick={onHideRecording}\r\n                type=\"link\"\r\n                shape=\"circle\"\r\n                icon=\"close\"\r\n                className=\"stop-recording\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <TextArea\r\n              onChange={e => setValue(e.target.value)}\r\n              onKeyUp={handleSendMessage}\r\n              size=\"large\"\r\n              placeholder=\"Введите текст сообщения…\"\r\n              value={value}\r\n              autoSize={{ minRows: 1, maxRows: 6 }}\r\n            />\r\n          )}\r\n\r\n          <div className=\"chat-input__actions\">\r\n            <UploadField\r\n              onFiles={onSelectFiles}\r\n              containerProps={{\r\n                className: \"chat-input__actions-upload-btn\"\r\n              }}\r\n              uploadProps={{\r\n                accept: \".jpg,.jpeg,.png,.gif,.bmp\",\r\n                multiple: \"multiple\"\r\n              }}\r\n            >\r\n              <Button id=\"attach\" type=\"link\" shape=\"circle\" icon=\"camera\" />\r\n              <label htmlFor=\"attach\"></label>\r\n            </UploadField>\r\n            {isLoading ? (\r\n              <Button type=\"link\" shape=\"circle\" icon=\"loading\" />\r\n            ) : isRecording || value || attachments.length ? (\r\n              <Button\r\n                onClick={sendMessage}\r\n                type=\"link\"\r\n                shape=\"circle\"\r\n                icon=\"check-circle\"\r\n              />\r\n            ) : (\r\n              <div className=\"chat-input__record-btn\">\r\n                <Button\r\n                  onClick={onRecord}\r\n                  type=\"link\"\r\n                  shape=\"circle\"\r\n                  icon=\"audio\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {attachments.length > 0 && (\r\n          <div className=\"chat-input__attachments\">\r\n            <UploadsFiles\r\n              removeAttachments={removeAttachments}\r\n              attachments={attachments}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nChatInput.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ChatInput;","import React from 'react';\r\nimport { Form, Icon, Input } from 'antd';\r\n\r\n\r\nconst FormField = ({touched,type, errors,name, icon, values, handleBlur,handleChange,placeholder}) => {\r\n    return ( \r\n        <Form.Item \r\n        validateStatus={!touched[name] ? '' : errors[name] ? 'error' : 'success'} \r\n        hasFeedback\r\n        help={!touched[name] ? '' : errors[name]}>\r\n            <Input\r\n              id={name}\r\n              type={type}\r\n              size=\"large\"\r\n              prefix={<Icon type={icon} style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder={placeholder}\r\n              value={values[name]}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n        </Form.Item>\r\n     );\r\n}\r\n \r\nexport default FormField;","import React from 'react'\r\nimport {Icon,Button, Modal,Select, Input, Form } from 'antd'\r\nimport { Dialogs  } from 'containers'\r\nimport './sidebar.scss'\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst SideBar = ({\r\n    user,\r\n    users, \r\n    onClose, \r\n    onShow,\r\n    visible, \r\n    Isloading,\r\n    inputValue, \r\n    handleChange,\r\n    handleSearch,\r\n    onSelectUser,\r\n    onAddDialog,\r\n    messageValue,\r\n    handleChangeMessage,\r\n    selectedUserId\r\n}) => {\r\n    const options = users.map(user => <Option key={user._id}>{user.fullname}</Option>);\r\n    return (  \r\n        <div className='chat__sidebar'>\r\n        <div className='chat__sidebar-header'>\r\n           <div>\r\n              <Icon type=\"team\" aria-label=\"\"/>\r\n              <span>Список диалогов</span>\r\n           </div>\r\n           <Button onClick={onShow} type='link' shape=\"circle\" icon=\"form\"/>\r\n        </div>\r\n        <div className=\"chat__sidebar-dialogs\">\r\n        { user && <Dialogs userId={ user && user._id}/>}\r\n        </div>\r\n        <Modal\r\n        title=\"Add dialog\"\r\n        visible={visible}\r\n        onOk={onAddDialog}\r\n        onCancel={onClose}\r\n        footer={[\r\n            <Button key=\"black\" onClick={onClose} style={{width: 100}}>\r\n                Закрыть\r\n            </Button>,\r\n            <Button \r\n            style={{width: 100}}\r\n            disabled={!messageValue}\r\n            key=\"submit\" \r\n            type=\"primary\" \r\n            loading={Isloading} \r\n            onClick={onAddDialog}>\r\n                Создать\r\n            </Button>\r\n        ]}>\r\n            <Form >\r\n            <Form.Item label=\"Введите имя пользователя или E-Mail\">\r\n            <Select\r\n                showSearch\r\n                value={inputValue}\r\n                placeholder={'Найти пользователя'}\r\n                style={{ width: '100%'}}\r\n                defaultActiveFirstOption={false}\r\n                showArrow={false}\r\n                onSelect={onSelectUser}\r\n                filterOption={false}\r\n                onSearch={handleSearch}\r\n                onChange={handleChange}\r\n                notFoundContent={null}\r\n            >\r\n                {options}\r\n            </Select>\r\n            </Form.Item>\r\n            { selectedUserId && <Form.Item label=\"Введите сообщение\">\r\n            <TextArea \r\n            placeholder=\"Ваше Сообщение\"\r\n            value={messageValue}\r\n            onChange={handleChangeMessage}\r\n            autosize={{minRows: 2, maxRows: 6}}/>\r\n            </Form.Item>}\r\n            </Form>\r\n        </Modal>\r\n     </div>\r\n     );\r\n}\r\n \r\nexport default SideBar;","import React, { useState, useEffect } from 'react'\r\nimport { Upload, Modal } from 'antd';\r\n\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nconst UploadsFiles = (props) => {\r\n  const { attachments,removeAttachments } = props\r\n\r\n  const [previewVisible, setPreviewVisible] = useState(false)\r\n  const [fileList, setFileList] = useState()\r\n  const [previewImage, setPreviewImage] = useState()\r\n\r\n  useEffect( () => {\r\n    setFileList(attachments)\r\n  },[attachments])\r\n\r\n const handleCancel = () => setPreviewVisible(false);\r\n\r\n const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview)\r\n    setPreviewVisible(true)\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => setFileList(fileList);\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={handlePreview}\r\n          onChange={handleChange}\r\n          onRemove={file => removeAttachments(file)}\r\n        >\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n  )\r\n}\r\nexport default UploadsFiles;\r\n \r\n","import React, { useState } from 'react'\r\nimport { Avatar,Edit } from 'containers'\r\nimport { getMessageTime } from 'utils/helpers'\r\nimport './profile.scss'\r\nimport parseISO from 'date-fns/parseISO'\r\nimport { Modal } from 'antd';\r\nimport { ContactsFilled,FileImageFilled,LoadingOutlined,MailOutlined,IdcardOutlined,HddOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom' \r\n\r\nexport default function Profile(props) {\r\n    const { userData,uploadAvatar,isDoneAvatar,setIsDoneAvatar,userId,currentDialogId,setIsVisiable, isVisiable, previewImage,setPreviewImage } = props\r\n        const [modal, setModal] = useState(false)\r\n        console.log(userData)\r\n    return (\r\n            userData !== null  && \r\n            <>\r\n           <div className=\"overlay\"></div>\r\n           <div className=\"modal_container\">\r\n               <div className=\"modal_container__main\">\r\n               \r\n               {userData.id  &&  \r\n               <div className=\"modal_container__main-header\">\r\n                   <div className=\"modal_container__main-header-upper\">\r\n                       <p>Settings</p>\r\n                       <div className=\"modal_container__main-header-upper-right\">\r\n                   { userId === userData._id && \r\n                <div>\r\n            <p onClick={() => setModal(!modal)}>\r\n         Edit\r\n        </p>\r\n        <Modal\r\n          visible={modal}\r\n          width=\"400px\"\r\n          onOk={() => {setModal(!modal)}}\r\n          onCancel={() => {setModal(!modal)}}\r\n          footer={''}\r\n          centered\r\n        >\r\n         <Edit setModal={setModal} modal={modal}/>\r\n        </Modal>\r\n                </div>\r\n                }\r\n                <p onClick={() => setIsVisiable(!isVisiable)}>Close</p>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                { isDoneAvatar && <LoadingOutlined className=\"profile_loader\" style={{color: 'black'}}/>}\r\n                </div>\r\n                    <div className=\"modal_container__main-header-block\">\r\n                   <div className=\"modal_container__main-header-avatar\" onClick={() => setPreviewImage(userData.avatar)}>\r\n                    <Avatar user={userData} />\r\n                    </div>\r\n                    <div className=\"modal_container__main-header-info\">\r\n                    <p>{userData.fullname}</p>\r\n                    <p className=\"modal_container__main-header-info-status\">{ !userData.isOnline ? `last seen ${getMessageTime(parseISO(userData.last_seen))}`: 'Online'}</p>\r\n                    </div>\r\n                    { userId === userData._id ? \r\n                    (\r\n                    <>\r\n                    <input type=\"file\" id=\"file\" onChange={(e) => {\r\n                        setIsDoneAvatar(true)\r\n                        uploadAvatar(e.target.files[0])\r\n                    }}/>\r\n                    <label htmlFor=\"file\" className=\"btn-3\"><FileImageFilled style={{fontSize: '22px'}}/></label> \r\n                    </>\r\n                    )\r\n                     : \r\n                     ( <div className=\"modal_container__main-header-info-redirect\">\r\n                         <Link to={`/dialog/${currentDialogId}`} onClick={ () => { setIsVisiable(!isVisiable)}}><ContactsFilled style={{fontSize: '30px'}}/></Link>\r\n                       </div>\r\n                     )}\r\n                     </div>\r\n                </div>}\r\n                <div className=\"modal_container__main-body\">\r\n                    <div className=\"modal_container__main-body-item\">\r\n                        <MailOutlined />\r\n                        <div>{userData.email}</div>\r\n                        <div>Электронная почта</div>\r\n                    </div>\r\n                    <div className=\"modal_container__main-body-item\">\r\n                        <MailOutlined />\r\n                        {userData.bio.startsWith(\"https://\") ?  <a target=\"_blank\" rel=\"noopener noreferrer\" href={userData.bio}>{userData.bio}</a> :\r\n                        <div>{userData.bio}</div>\r\n                            }\r\n                        <div>Bio</div>\r\n                    </div>\r\n                    <div className=\"modal_container__main-body-item\">\r\n                        <IdcardOutlined />\r\n                        <div>{userData.id}</div>\r\n                        <div>Идентификатор</div>\r\n                    </div>\r\n                    <div className=\"modal_container__main-body-item\">\r\n                        <HddOutlined />\r\n                        <div>{userData.createdAt}</div>\r\n                        <div>Дата регистрации</div>\r\n                    </div>\r\n                    {/* <div className=\"modal_container__main-body-item\">\r\n                        <CheckOutlined />\r\n                        <div>{userData.confirmed ? `Да` : `Нет`}</div>\r\n                        <div>Подтвержден</div>\r\n                    </div> */}\r\n                    <hr style={{color: '#ebebeb', marginTop: 20, marginBottom: 20}}/>\r\n                </div>\r\n               </div>\r\n            </div>\r\n            <Modal\r\n           width=\"650px\"\r\n           style={{zIndex: 9999999999}}\r\n           visible={!!previewImage}\r\n           footer={null}\r\n           onCancel={() => setPreviewImage(null)}\r\n            >\r\n          <img src={previewImage} style={{width: '100%'}} alt=\"prewiew\"/>\r\n          </Modal>\r\n            </>\r\n        )\r\n   \r\n}\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\nimport { Button } from 'components'\r\nimport './edit.scss'\r\nconst Edit = ({value,handleChangeInput,handleChangeData, modal, setModal}) => {\r\n    return ( \r\n        <div className=\"edit\">\r\n            <h4>Edit profile</h4>\r\n            <div className=\"pd\">\r\n            <Input placeholder=\"fullname\" name=\"fullname\" value={value.fullname} onChange={handleChangeInput}/>\r\n            <Input placeholder=\"email\" name=\"email\" value={value.email} onChange={handleChangeInput}/>\r\n            <Input placeholder=\"bio\" name=\"bio\" value={value.bio} onChange={handleChangeInput}/>\r\n            <div className=\"edit__btn\">\r\n            <Button onClick={() => {\r\n                 handleChangeData()\r\n                 setModal(!modal)\r\n             }}>Edit</Button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Edit;","import React from 'react';\r\nimport { Form, Icon, Input } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, WhiteBlock } from 'components'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n  } = props;\r\n\r\n  return ( \r\n    <div>\r\n      <div className=\"auth__top\">\r\n           <h2>Войти в аккаунт</h2>\r\n           <p>Пожалуйста, войдите в свой аккаунт</p>\r\n       </div>\r\n       <WhiteBlock>\r\n       <Form onSubmit={handleSubmit} className=\"login-form\">\r\n           <Form.Item \r\n           validateStatus={!touched.email ? '' : errors.email ? 'error' : 'success'} \r\n           hasFeedback\r\n           help={!touched.email ? '' : errors.email}>\r\n               <Input\r\n                 id=\"email\"\r\n                 size=\"large\"\r\n                 prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                 placeholder=\"E-Mail\"\r\n                 value={values.email}\r\n                 onChange={handleChange}\r\n                 onBlur={handleBlur}\r\n               />\r\n           </Form.Item>\r\n           <Form.Item \r\n           validateStatus={!touched.password ? '' : errors.password ? 'error' : 'success'} \r\n           hasFeedback\r\n           help={!touched.password ? '' : errors.password}>\r\n               <Input\r\n                 id=\"password\"\r\n                 size=\"large\"\r\n                 type=\"password\"\r\n                 value={values.password}\r\n                 prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                 placeholder=\"Пароль\"\r\n                 onChange={handleChange}\r\n                 onBlur={handleBlur}\r\n               />\r\n           </Form.Item>\r\n           <Form.Item>\r\n             <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\" onClick={handleSubmit} >\r\n              Войти\r\n             </Button>\r\n             <Link to=\"/signUp\" className=\"auth__register-link\" >Зарегистрироваться</Link>\r\n           </Form.Item>\r\n         </Form>\r\n         </WhiteBlock>\r\n   </div>\r\n    );\r\n}\r\n \r\nexport default LoginForm;","export default ({ isAuth,values,errors }) => {\r\n  const rules = {\r\n\r\n    email: value => {\r\n      if (!value) {\r\n          errors.email = 'Введите E-Mail';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(\r\n            value\r\n          )\r\n        ) {\r\n          errors.email = 'Неверный E-Mail';\r\n        }\r\n        },\r\n    password: value => {\r\n    if(!value){\r\n      errors.password = 'Введите пароль'\r\n    }\r\n    // if (!isAuth && !/(?=.*[0-9])[a-zA-Z!@#$%^&*]{4,}/i.test(value)) {\r\n    // errors.password = \"Слижком легкий пароль\"\r\n    //     }\r\n    //   },\r\n  },\r\n    password2: value => {\r\n        if(!isAuth && value !== values.password){\r\n          errors.password2 = 'Пароли не совпадают'\r\n        }\r\n        if(!value) {\r\n        errors.password2 = 'Введите пароль';\r\n        }\r\n        \r\n          },\r\n      fullname: value => {\r\n        if(!isAuth && !value){\r\n          errors.fullname = 'Укажите свое имя и фамилию'\r\n        }\r\n      }\r\n    }\r\n\r\n  Object.keys(values).forEach( key => rules[key] && rules[key](values[key],errors))\r\n}\r\n\r\n","const initialState = {\r\n    items: [],\r\n    currentDialogId: window.location.pathname.split('dialog/')[1],\r\n    isLoading: false,\r\n}\r\n\r\nexport default ( state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case 'DIALOGS:SET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: payload\r\n            };\r\n        case 'DIALOGS:SET_CURRENT_DIALOG_ID':\r\n            return {\r\n                ...state,\r\n                currentDialogId: payload\r\n            };\r\n        case 'DIALOGS:CHANGE_MESSAGE':\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...state.items.lastMessage,\r\n                    readed: payload\r\n                }\r\n            };    \r\n        case 'DIALOGS:SET_UNREADED':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(dialog => {\r\n                dialog.lastMessage.unreaded = dialog.messages.filter((item) => item.readed !== true && item.user !== payload).length\r\n               \r\n                    return dialog\r\n                })\r\n                \r\n        };\r\n        case 'DIALOGS:LAST_MESSAGE_READED_STATUS':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(dialog => {\r\n                    if (dialog._id === payload.dialogId) {\r\n                      dialog.lastMessage.readed = true;\r\n                    }\r\n                    return dialog;\r\n                  }),\r\n        };    \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    items: [],\r\n    isLoading: false\r\n}\r\n\r\nexport default ( state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case 'MESSAGES:ADD_MESSAGE':\r\n            return {\r\n              ...state,\r\n              items: [...state.items, payload],\r\n            };\r\n        case 'MESSAGES:SET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n                isLoading:false\r\n            };\r\n         case 'MESSAGES:REMOVE_MESSAGE':\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(message => message._id !== payload),\r\n            };\r\n            case 'DIALOGS:LAST_MESSAGE_READED_STATUS':\r\n                return {\r\n                  ...state,\r\n                  items: state.items.map(message => {\r\n                    if (message.dialog._id === payload.dialogId) {\r\n                      message.readed = true;\r\n                    }\r\n                    return message;\r\n                  }),\r\n                };\r\n        case 'MESSAGES:SET_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    data: null,\r\n    userData: null,\r\n    token: window.localStorage.token,\r\n    isAuth: !!window.localStorage.token,\r\n}\r\n\r\nexport default ( state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case 'USER:SET_DATA':\r\n            return {\r\n                ...state,\r\n               data: payload,\r\n               isAuth: true,\r\n               token: window.localStorage.token\r\n            };\r\n        case 'USER:CHANGE_DATA':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                   ...state.userData,\r\n                   fullname: payload.fullname,\r\n                   email: payload.email,\r\n                   bio: payload.bio\r\n               },\r\n        };\r\n        case 'USER:SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                userData: payload,\r\n            };    \r\n        case 'USER:SET_AVATAR':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    avatar: payload\r\n                }\r\n            };\r\n        case 'USER:SET_IS_AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    items: []\r\n  };\r\n  export default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case \"ATTACHMENTS:SET_ITEMS\":\r\n        return {\r\n          ...state,\r\n          items: payload\r\n        };\r\n      case \"ATTACHMENTS:REMOVE_ITEM\":\r\n        return {\r\n          ...state,\r\n          items: state.items.filter(item => item.uid !== payload.uid)\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import { combineReducers } from 'redux'\r\n\r\nimport dialogs from './dialogs'\r\nimport messages from './messages'\r\nimport user from './user'\r\nimport attachments from './attachments'\r\n\r\n\r\nexport default combineReducers({\r\n    dialogs,\r\n    messages,\r\n    user,\r\n    attachments\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducers, composeEnhancers(\r\n    applyMiddleware(...middleware)\r\n))\r\n\r\n\r\nexport default store","import LoginForm from './containers/LoginForm'\r\n\r\nexport default LoginForm","import LoginForm from '../components/LoginForm'\r\nimport { withFormik } from 'formik'\r\nimport validations from 'utils/validations'\r\n\r\nimport { userActions } from 'redux/actions'\r\nimport store from 'redux/store'\r\n\r\nconst LoginFormContainer = withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validate: values => {\r\n      let errors = {};\r\n      validations({ isAuth: true,values,errors })\r\n      return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      .dispatch(userActions.fetchUserLogin(values))\r\n      .then(({ status }) => {\r\n        if (status === 'success') {\r\n          props.history.push('/');\r\n        }\r\n        // setSubmitting(false);\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false);\r\n      });\r\n  },\r\n    displayName: 'LoginForm',\r\n  })(LoginForm);\r\n\r\n  \r\n\r\n  export default LoginFormContainer;\r\n ","import React from 'react';\r\nimport { Form, } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, WhiteBlock, FormField } from 'components'\r\n\r\n\r\n\r\nconst RegisterForm = props => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    dirty,\r\n  } = props;\r\n  \r\n  return ( \r\n    <div>\r\n         <div className=\"auth__top\">\r\n           <h2>Регистрация</h2>\r\n           <p>Для входа в чат, вам нужно зарегистрироваться</p>\r\n       </div>\r\n       <WhiteBlock>\r\n       <Form onSubmit={handleSubmit} className=\"login-form\">\r\n         <FormField \r\n         name=\"email\"\r\n         icon=\"mail\"\r\n         placeholder=\"E-Mail\"\r\n         handleChange={handleChange}\r\n         handleBlur={handleBlur}\r\n         touched={touched}\r\n         errors={errors}\r\n         values={values}\r\n         />\r\n          <FormField \r\n         name=\"fullname\"\r\n         icon=\"user\"\r\n         placeholder=\"Ваше имя\"\r\n         handleChange={handleChange}\r\n         handleBlur={handleBlur}\r\n         touched={touched}\r\n         errors={errors}\r\n         values={values}\r\n         />\r\n          <FormField \r\n         name=\"password\"\r\n         icon=\"lock\"\r\n         placeholder=\"Пароль\"\r\n         handleChange={handleChange}\r\n         handleBlur={handleBlur}\r\n         touched={touched}\r\n         errors={errors}\r\n         values={values}\r\n         type=\"password\"\r\n         />\r\n         <FormField \r\n         name=\"password2\"\r\n         icon=\"lock\"\r\n         type=\"password\"\r\n         placeholder=\"Повторить пароль\"\r\n         handleChange={handleChange}\r\n         handleBlur={handleBlur}\r\n         touched={touched}\r\n         errors={errors}\r\n         values={values}\r\n         />\r\n         <FormField \r\n         name=\"bio\"\r\n         icon=\"message\"\r\n         type=\"text\"\r\n         placeholder=\"Расскажите о себе\"\r\n         handleChange={handleChange}\r\n         handleBlur={handleBlur}\r\n         touched={touched}\r\n         errors={errors}\r\n         values={values}\r\n         />\r\n           <Form.Item>\r\n           {dirty && !isValid ? <span>Ошибка!</span> : '' }\r\n             <Button type=\"primary\" onClick={handleSubmit} htmlType=\"submit\" size=\"large\" className=\"login-form-button\" >\r\n               Зарегистрироваться\r\n             </Button>\r\n             <Link to=\"/signIn\" className=\"auth__register-link\">Войти в аккаунт</Link>\r\n           </Form.Item>\r\n         </Form> \r\n         \r\n       </WhiteBlock>\r\n   </div>\r\n    );\r\n}\r\n \r\nexport default RegisterForm;\r\n","import RegisterForm from './containers/RegisterForm'\r\n\r\nexport default RegisterForm","import RegisterForm from '../components/RegisterForm'\r\nimport { withFormik } from 'formik'\r\nimport validations from 'utils/validations'\r\nimport { openDialogs } from 'utils/helpers'\r\nimport { userActions } from 'redux/actions'\r\nimport get from 'lodash/get';\r\nimport store from 'redux/store'\r\n\r\nexport default  withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        fullname: '',\r\n        password: '',\r\n        password2: '',\r\n        bio: ''\r\n    }),\r\n    validate: values => {\r\n      let errors = {};\r\n      validations({ isAuth: false, values, errors })\r\n      return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting,props }) => {\r\n      store.dispatch(userActions.fetchUserRegister(values))\r\n      .then( () => {\r\n        props.history.push('/signin');\r\n        // setSubmitting(false)\r\n      })\r\n      .catch(err => {\r\n        if (get(err, 'response.data.message.errmsg', '').indexOf('dup') >= 0) {\r\n          openDialogs({\r\n            title: 'Ошибка',\r\n            text: 'Аккаунт с такой почтой уже создан.',\r\n            type: 'error',\r\n            duration: 5000\r\n          });\r\n        } else {\r\n          openDialogs({\r\n            title: 'Ошибка',\r\n            text: 'Возникла серверная ошибка при регистрации. Повторите позже.',\r\n            type: 'error',\r\n            duration: 5000\r\n          });\r\n        }\r\n        // setSubmitting(false);\r\n      });\r\n    },\r\n    displayName: 'RegisterForm',\r\n  })(RegisterForm);","import React,{useState, useEffect} from 'react'\r\nimport { Result, Button, Spin } from 'antd';\r\nimport { userApi } from 'utils/api'\r\nimport { WhiteBlock } from 'components'\r\n\r\nconst renderTextInfo = ({ hash, verified }) => {\r\n    if (hash) {\r\n      if (verified) {\r\n        return {\r\n          status: 'success',\r\n          title: 'Готово!',\r\n          message: 'Аккаунт успешно подтвержден!',\r\n        };\r\n      } else {\r\n        return {\r\n          status: 'error',\r\n          title: 'Ошибка',\r\n          message: 'Вы указали несуществующий или неверный хеш.',\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        status: 'info',\r\n        title: 'Подтвердите почту',\r\n        message: 'Ссылка с подтверждением аккаунта отправлена на E-Mail.',\r\n      };\r\n    }\r\n  };\r\n  \r\n  const CheckInfo = ({ location, history }) => {\r\n    const hash = location.search.split('hash=')[1];\r\n    const [verified, setVerified] = useState(false);\r\n    const [checking, setChecking] = useState(!!hash);\r\n    const [info, setInfo] = useState(renderTextInfo({ hash, checking, verified }));\r\n  \r\n    \r\n\r\n    useEffect(() => {\r\n\r\n      const setStatus = ({ checking, verified }) => {\r\n        setInfo(renderTextInfo({ hash, checking, verified }));\r\n        setVerified(verified);\r\n        setChecking(checking);\r\n      };\r\n\r\n      if (hash) {\r\n        userApi\r\n          .verify(hash)\r\n          .then(() => {\r\n            setStatus({ verified: true, checking: false });\r\n          })\r\n          .catch(() => {\r\n            setStatus({ verified: false, checking: false });\r\n          });\r\n      }\r\n    }, [hash]);\r\n  \r\n    return (\r\n      <div className=\"verify-block\">\r\n        <WhiteBlock>\r\n          {!checking ? (\r\n            <Result\r\n              status={info.status}\r\n              title={info.title}\r\n              subTitle={info.message}\r\n              extra={\r\n                info.status === 'success' &&\r\n                verified && (\r\n                  <Button type=\"primary\" onClick={() => history.push('/signin')}>\r\n                    Войти\r\n                  </Button>\r\n                )\r\n              }\r\n            />\r\n          ) : (\r\n            <div className=\"verify-block__loading\">\r\n              <Spin size=\"large\" />\r\n            </div>\r\n          )\r\n          }\r\n        </WhiteBlock>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default CheckInfo;","import React from 'react';\r\nimport './auth.scss'\r\nimport { LoginForm, RegisterForm } from 'modules'\r\nimport { Route,Switch } from \"react-router-dom\";\r\nimport CheckInfo from './conponents/CheckInfo';\r\n\r\nconst Auth = () =>  {\r\n\r\nreturn ( \r\n        <section className=\"auth\">\r\n            <div className=\"auth__content\">\r\n            <Switch>\r\n                <Route exact path={[\"/\",\"/signIn\"]} component={LoginForm} />\r\n                <Route exact path=\"/signUp\" component={RegisterForm}/>\r\n                <Route exact path=\"/signUp/verify\" component={CheckInfo}/>\r\n            </Switch>\r\n            </div>\r\n        </section>\r\n        );\r\n}\r\n  \r\nexport default Auth;","import React,{useEffect,useState} from 'react';\r\nimport './home.scss'\r\nimport { Messages,ChatInput,Status, SideBar  } from 'containers'\r\nimport { withRouter } from 'react-router'\r\nimport { dialogsActions } from 'redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport { Profile } from 'containers'\r\n\r\nconst Home = (props) =>  {\r\n   const [isVisiable, setIsVisiable] = useState(false)\r\n   \r\n   useEffect(() => {\r\n     const { setCurrentDialogId } = props;\r\n     const { pathname } = props.location;\r\n     const dialogId = pathname.split('/').pop();\r\n     setCurrentDialogId(dialogId);\r\n   }, [props]);\r\n \r\n   useEffect( () => {\r\n     window.addEventListener('click', e => {  \r\n     return e.target.className === 'overlay' ? setIsVisiable(false) : null\r\n   })\r\n  },[])\r\n   \r\nreturn ( \r\n   <section className=\"home\">\r\n     {isVisiable ? <Profile isVisiable={isVisiable} setIsVisiable={setIsVisiable}/> : null}\r\n   <div className=\"chat\">\r\n     <SideBar />\r\n     {(\r\n       <div className=\"chat__dialog\">\r\n         <Status setIsVisiable={setIsVisiable} isVisiable={isVisiable}/>\r\n         <Messages setIsVisiable={setIsVisiable} isVisiable={isVisiable}/>\r\n         <div className=\"chat__dialog-input\">\r\n           <ChatInput />\r\n         </div>\r\n       </div>\r\n     )}\r\n   </div>\r\n </section>\r\n        );\r\n}\r\n  \r\nexport default withRouter(connect(({dialogs})=> dialogs,dialogsActions)(Home));","import React from 'react';\r\nimport { Auth, Home } from 'pages'\r\nimport { Route,Redirect, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst App = (props) => {\r\n  const { isAuth } = props\r\n \r\n  return (\r\n    <>\r\n    <Switch>\r\n    <Route exact path={[\"/signIn\",\"/signUp\",\"/signUp/verify\"]} component={Auth} />\r\n    <Route \r\n    path=\"/\"\r\n    render={()=> (isAuth ? <Home /> : <Redirect to=\"/signIn\"/>)}/>\r\n    </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(({user}) => ({isAuth: user.isAuth}))(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport './styles/index.scss'\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./redux/store\"\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { userActions } from 'redux/actions'\r\n\r\nstore.dispatch(userActions.fetchUserData())\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <Router>\r\n  <App />\r\n  </Router>\r\n    </Provider>\r\n  , document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}